Оболочки linux:
The Bourne shell        /bin/sh
The Bourne again shell  /bin/bash
The Korn shell          /bin/ksh
The C Shell             /bin/csh
Tom's C Shell           /bin/tcsh

Команды:
cat - вывод содержимого файла в консоль
cd - переход в каталог
ls - вывод содержимого каталога
echo - вывод текста в консоль
touch - обновление времени редактирования файла либо создание файла если файла нет
file - справка по файлу
whatis - справка по названию
history - вывод истрии команд
env - вывод переменных среды
pwd - текущий каталог
export - задание переменной
unset - отключение переменной
mkdir - создать папку
rmdir - удалить папку
cp - копирование файлов и папок
mv - перемещение файлов и папок (так же её используют для переименования)
При копировании папок командами cp и mv используется ключ -R (Рекурсивное копирование/перемещение)
rm - удаление файлов и папок (для удаления папок с содержимым использовать ключ -rf) 
Посмотреть используемую оболочку:
cat /etc/passwd

Глобальные настройка bash находятся в файле /etc/profile.
Настройки bash для конкретного пользователя /home/<username>/.profile
Настройка внешнего вида консоли для конкретного пользователя /home/<username>/.bashrc

Несколько команд в одной строке comand1 ; comand2
Например: ls ; pwd
Вывод по маске: 
ls *.txt

Информация о системе:
uname -a

Найти мануалы, связанные с http man -k http

Выполнить команду, игнорируя настройки оболочки exec 

Групповые символы:
* - любая последовательность символов, включая пустую последовательность.
? - один любой символ
! - не
[ac] - а или c
[a-c] - a,b,c

Команда для поиска find
find /path/ - name "Something*"
find /path/ -size +7M
find /path/ -size -7M
find /path/ -type d    - Найти директорию
find /path/ -type f    - Найти файл
find /path/ -atime +5  - Найти по времени доступа [дней]
find /path/ -ctime +5  - Найти по времени создания [дней]

Архиваторы:
cpio - копирует файлы из и в архивы
ls | cpio -o > /path/archive.cpio  - Архивирует содержимое папки в архив по соответствующему адресу.
find . -name "*.txt" | cpio -o > /path/archive1.cpio -  Архивирует файлы в папке с расширением .txt в архив по соответствующему адресу.
cpio -id < /path/to/archive.cpio - извлечь архив из в текущую папку


dd - конвертирует и копирует файлы. Может копировать блочные устройства (Диски и т.д.) Для работы программы нужны права root

dd if=/dev/sdb of=drive.img  Взять диск sdb и записать в файл drive.img

gzip - архиватор
gizp file - создаёт архив c расширением .gz , удаляя оригинал файла
gunzip file.gz - распаковывает архив file.gz , удаляя оригинал архива.

bzip2 - архиватор
bizp2 file - создаёт архив c расширением .bz2 , удаляя оригинал файла
bunzip2 file.bz2 - распаковывает архив file.bz2 , удаляя оригинал архива.

bzip2 сжимает файлы гораздо эффективнее, чем gzip

xz - архиватор, создающий контейнер для одного единственного файла.
xz file - создаёт архив c расширением .xz , удаляя оригинал файла
xz file.xz - распаковывает архив file.xz , удаляя оригинал архива.


tar - наиболее часто используемый архиватор.
tar cvf archive.tar folder    - Заархивировать папку folder в архив archive.tar. Оригинал папки folder сохраняется. 
tar cvfz archive.tar.gz folder    - Заархивировать папку folder в архив archive.tar.gz, используя архиватор gzip Оригинал папки folder сохраняется.
tar xvf archive.tar - Разархивировать archive.tar в текущую папку.

Потоки, конвееры и перенаправления ввода/вывода.

> Передать в (Если указан имеющийся файл, то его содержимое будет перезаписано.
>> Дописать в
< Взять из
| Передать сдедующей команде
Tee отправить файл на стандартный вывод.
xargs - построчно передать на вывод команде.

Вывод ошибки в файл comand 2> error.txt
Comand > result.txt 2>error.txt  -  Вывод резултата в файл result.txt, а ошибку в error.txt

Comand1 |Comand2 - Передать результат команды 1 как входные данные для команды 2

ls | grep r - Найти в текущей папке файлы с буквой r

ls | tee output.txt - Вывести содержимое папки на экран

find . -name "*.txt" | xargs cat - Вывести на экран содержимое всех текстовых файлов на экран 

Управление службами: 
systemctl list-units --all --type=service
                                         - Показать список запущеных служб
service  --status-all  


systemctl start application - Запуск службы
systemctl stop application  - Остановка службы
systemctl restart application - Перезапуск службы
systemctl reload application - Перезагрузка службы
systemctl status application - Показать статус службы
systemctl list-unit-files --state enabled - Показать список служб в автозагрузке.
systemctl enable application  - Добавить службу в автозагрузку
systemctl disable application - Убрать службу из автозагрузки
systemctl is-enabled application - Показать, есть ли служба в автозагрузке.

cat - вывод содержимого файла в консоль. Можно выводить сразу несколько файлов. Так же можно обьединять несколько файлов:
cat file1.txt file2.txt > file3.txt
cut - выводит выбранные части строк (столбцы) каждого заданного файла
cut -c 2,3,4 - Вывести 2, 3, 4 символ каждой строки
expand - конвертировать табуляции в пробелы.
expand filename.txt
fmt -форматированый вывод текста.
fmt text.txt убрать переходы на новую строку. 
fmt -w 5 text.txt Вывод файла - не более 5 символов в строке.
head  text.txt - просмотреть первые 10 строк  файла
head -n 2 text.txt - показать первые 2 строки файла
od - переформатирование текста
od text.txt - Вывод файла в виде восмеричного кода
od -c text.txt - Вывод файла в виде символов ASCII
join - объединение файлов по общему полю
Пример:
$ cat 1.txt
1. Morning
2. Afternoon
3. Evening
$ cat 2.txt
1. Eat
2. Drink
3. Sleep
$ join 1.txt 2.txt
1. Morning Eat
2. Afternoon Drink
3. Evening Sleep

less text.txt - Просмотр файла с возможностью постраничного перелистывания
nl   text.txt - Вывод файла с нумерацией строк
paste - объединяет строки файлов и выводит их на экран
Пример:
$ cat 1.txt
1. Morning
2. Afternoon
3. Evening
$ cat 2.txt
1. Eat
2. Drink
3. Sleep
$ paste  1.txt 2.txt
1. Morning      1. Eat
2. Afternoon    2. Drink
3. Evening      3. Sleep

pr - показывает как будет выглядеть текст при выводе его на печать.
sed - потоковый редактор для фильтрации и трансформирования текста.
Пример:
$ cat 1.txt 
1. Morning
2. Afternoon
3. Evening
$ sed -e 's/Morning/Night/' 1.txt
1. Night
2. Afternoon
3. Evening
sort - сортирует строки в выводе файла.
Пример:
$ cat 3.txt
Morning
Afternoon
Evening
$ sort 3.txt
Afternoon
Evening
Morning
$ sort -r 3.txt
Morning
Evening
Afternoon
split - разбить файл
split -l 2 1.txt - разбить файл по 2 строки
split -b 5 1.txt - разбить файл по 5 байт
tail - показывает последнюю часть файла 
tr - переводит или удаляет символы
Пример:
$ echo Morning | tr -t A-Z a-z
morning
$ echo Morning | tr -d M 
orning
$ echo Morning | tr -d M
unexpand - превращает пробелы в табуляции
uniq - Ищет уникальные и повторяющиеся линии
Пример:
cat 3.txt
Morning
Afternoon
Afternoon
Evening
$ uniq  3.txt
Morning
Afternoon
Evening
$ uniq -c 3.txt
      1 Morning
      2 Afternoon
      1 Evening
$ uniq -d 3.txt
Afternoon
$ uniq -u 3.txt
Morning
Evening
wc - считает количество переносов, слов, байт в файле
Если ФАЙЛ не задан или задан как -, читает стандартный ввод.

Для выбора выводимых счётчиков используются следующие параметры
(счётчики всегда выводятся в таком порядке: символы новой строки,
слова, символы, байты, максимальная длина строки):
  -c, --bytes            напечатать количество байт
  -m, --chars            напечатать количество символов
  -l, --lines            напечатать количество новых строк
      --files0-from=Ф    читать ввод из файлов, имена которых
                         (завершённые нулем) перечислены в файле Ф;
                         Если Ф равно -, то читать имена файлов из
                         стандартного ввода
  -L, --max-line-length  напечатать максимальной число строк по ширине экрана
  -w, --words            напечатать количество слов
      --help     показать эту справку и выйти
      --version  показать информацию о версии и выйти
Работа с Железом:
HAL - Представляет абстракцию железа для ОС
Dbus - представляет информацию о железе софту
Udev - современный менеджер устройств
Приимущества udev:
Работает на уровне пользователя
Управляется событиями
Понятные файлы конфигов
Держит в системе только файлы активных устройств
Devfs использовавшаяся в прошлом виртуальная файловая система, функционал которой перешёл в udev монтируется в /dev
mem -образ физической памяти ПК
null - пустое устройство
pts/ - псевдотермины
urandom - генератор случайныхчисел
sdx - блочные устройства
tty - аппаратные терминалы
Sysfs - экспортирует информацию о драйверах и устройствах на уровень пользователя. Монтируется в /sys.
devices/ - все устройства, зарегистрированные в ядре;
bus/ - перечень шин
devices/ - драйверы
block/ - каталог блочных устройств
class/ - группировка всех устройств по классам
Sysfs содержит файлы с информацией об устройстве. Devfs содержит файлы для обращения к устройствам.
Procfs - иерархическое представление всех процессов в системе. Монтируется в /proc.
PID/ - информация о конкретном процессе.
cpuinfo/ - сведения о ЦПУ
devices/ - перечень настроенных устройств
mounts/ - смонтированные файловые системы
sys/ - доступные для редактирования файловые системы.

В файле /proc/sys/net/ipv4/ip_forward содержится информация о том, разрешён ли транзитный трафик.
Если 0 то не разрешён. Если 1 то разрешён. Содержимое файла сбрасывается после перезагрузки.
 
lsmod - информация о модулях ядра
lspci - информация об устройствах PCI
lspcmcia - информация об устройствах PCMCIA
lsusb - информация о шине usb

lshal - база устройств hal         \
                                    Не используются в настоящее время
lshw - информация о комплектующих  /

udevadm
info  - Получение информации из БД
trigger - Запросить события для устройства
settle  - Дождаться завершения обработки
control - Управление демоном
monitor - следить за событиями
test - симулировать запуск события


lsmod - информация о модулях ядра
modinfo - информация о конкретном модуле
rmmod   - даление модуля ядра
insmod  - установка модулей ядра
modprobe - Деликатное удаление или добавление модуля (Как правило, используется именно эта команда.)

Процедуры инициализации Linux
Инициализация SysV

runlevel - Режим фнкционирования ОС
В большинстве Linux систем существует 7 режимов функционирования ОС. В некоторых их 10.
0 - Выключение
1 - Однопользовательский режим (Чаще всего используется для отладки)
2 - Debian/Ubuntu по умолчанию
3 - Redhat/Suse  по умолчанию текстовый режим
4 - WildCard (программируемый режим можем поставить сюда что заходим
5 - Redhat/Suse GUI
6 - Перезагрузка

Конфигурационный файл родительского процесса инициализации init /etc/inittab
скрипты для различных уровней запуска находятся в папке /etc/rc.d
Скрипты, выполняемы при загрзке ОС находятся в папке /etc/init.d
Основные команды:
Init - Управление инициализацией
Tlinit - управление процессом init
Wall - вывод сообщения пользователям системы
Halt - выключение компьютера
Reboot - перезакрузка компьютера
Shutdown - запланированное выключение
Service service_name - start | stop | reload | restart - Остоновка, запуск, рестарт и перезагрузка службы
Systemd
Unit - модули, которыми оперирует systemd:
.service - служба
.mount - точка монтирования
.device - устройства
.socket - сокеты
/usr/lib/systemd - директория с юнитами по умолчанию
/etc/systemd директория с управляемыми юнитами
Tearget - аналог runlevel
0   poweroff targer  выключение
1   rescue.target    однопользовательский режим
2,4 mult-user.target настраиваемые режимы 
3   mult-user.target многопользовательский режим
5   graphical.target графический режим
6   reboot.target    перезагрузка

systemctl list-units -type=target    - узнать запущеные таргеты
systemctl isolate name.target        - переключиться на другой
systemctl set-default -f name.target - установить по умолчанию

journald - служба журналирования. Запуск командой journald
systemctl reboot poweroff | suspend | hibernate | hybrid-sleep - работа с питанием
systemctl start | stop | reload | restart | status unit        - работа с юнитами

Upstart
Services и Tasks - то, чем оперирует upstart
/etc/init - каталог файлов заданий
initctl - утилита управления upstart
initctl check-config проверка конфигурации
runlevel и переключение между ними такие же как в SysV
Для изменения runlevl по умолчанию нужно отредактировать файл /etc/init/rc-sysinit.conf (Строка env DEFAULT_RUNLEVEL)
Управление службами:
start | stop | rload | restart | status  service_name

Загрузка ОС Linux
BIOS/UEFI -> MBR/GPT -> LILO/GRUB -> Linux Kernel -> init
dmesg Вывести команды ядра 
cat /etc/log/dmeseg Вывести лог загрузки
Ситема инициализации ОС:
Init в стиле SysV - родительский процесс инициализации системы на одном из заданных уровней запуска (runlevel).
Init в стиле systemd - родительский процесс инициализации системы в ускоренном режиме, засчёт параллельного запуска задач.
Init в стиле Upstart - родительский процесс инициализации системы на основе отслеживания событий.
/boot/grub/grub.cfg - Файл загрузчика grub.

Fg (Foreground) - Активный режим
Bg (Background) - Фоновый режим 
Nohup (no hang up) - оставлять процессы рабочими даже при выходе польователя из системы

Ps - Информация об активных процессах (Snapshot)
Pstree - Дерево процессов
Pgrep - Поиск процессов
Pkill - Завершение процессов по имени
Top - Диспетчер задач
Free - Загрузка оперативной памяти
Uptime - Время и полнота загрузки
Screen - управление сессиями
Sleep - задержка выполнения скрипта
& - добавить в конец команды для выполнения в фоновом режиме.
jobs - процессы в фоновом режиме
fg № команды из jobs - переключиться в процесс, находящийся в фоновом режиме.
Ctrl + Z приостановить процесс
bg  № команды из jobs - запустить процесс, находящийся в фоновом режиме.
ps aux все процессы всех пользователей, даже вне терминала.

kill PID Завершение процесса по PID
killall name Завершить все процессы с соответствующим именем.
pgrep name - вывести pid процесса с определённом именем.
pgrep -u username - показать процессы пользователя с именем username
Сигнал 15 - мягкое завершение процесса. Сигнал 9 - жесткое завершение процесса 

Uptime - Время и полнота загрузки
 16:26:56 up  1:06,                 1 user,                 load average: 0,00,  0,01,    0,01
Текущее время Время работы количество пользователей  загрузка последние  минута 5 минут 15 минут 

screen открытие нескольких терминальных окон в рамках одного терминала.

Приоритеты процессов в Linux от -20 до +19 ,во FreeBSD до +20
Чем ниже цифра тем выше приоритет.
Для изменения приоритетов используется nice и renice
Для просмотра приоритетов ps alx или ps -eo user,pid,nice,comm
Приоритет будет в столбце nice

Для запуска процессов с определённым приоритетом nice -n 19 command
Изменить приоритет процесса renice 5 -p PID
Изменить приоритет для процессов определённого пользователя renice 15 -u username

Регулярные выражения:
\<text - слова начинающиеся с text
text\> - слова заканчивающиеся на text
^ - начало строки
$ - конец строки
[a-z] - диапазон от a до z
[^t] - не буква t
\[ - воспринять символ [ буквально
. - любой символ
a|z - a или z

grep - утилита поиска по выражению
egrep - расширеный grep. Воспринимает большее количество регулярных выражений.
fgrep - быстрый grep. Не воспринимает регулярные выражения.
rgrep - рекурсивный grep. Ищет во внутренних каталогах.
sed - потоковый тестовый редактор
grep -i без учёта регистра

Текстовый редактор vi
Перемещение по документу h - влево j - вниз k - вверх l - вправо
e b  - начало и конец слова
( )  - конец и начало предложения
{ }  - конец и начало абзаца
^ $  - конец и начало строки
1G G - конец и начало файла
По умолчанию работа в режиме ввода команд
i режим вставки перед текущим символом
a режим вставки после текущего символа
o новая строка
s режим замены символа
Чтобы выйти из режима вставки нажать Escape 

yy - скопировать строку
yw - скопировть слово
yl - скопировать символ
dd - вырезать строку
dw - вырезать слово
dl - вырезать символ
p  - вставить
d + команда вырезать согласно команде
/ начать поиск ниже
? начать поиск выше
N и n -продолжить поиск
:e - отменить изменения
:w - записать изменения
:q - выйти из файла
:q! или ZQ - выйти не сохраняя
:wq! или ZZ - выйти и сохранить
cw - изменить слово

Debian/Ubuntu

Dpkg - утилита управления пакетами в Debian системах
-l перечень пакетов в системе
-L перечень файлов в пакетах
-s информация о статусе пакета
-S Поиск пакета содержащего файл
-i установка пакета
-I информация о пакете в файле *.deb
-r простое удаление пакета
-P удаление пакета вместе с конфигурационными файлами
Dpkg-reconfigure - переконфигурация пакета

Apt - программа работы с пакетами программ в Debian-системах
apt-get - скачивание, установка и удаление пакетов
apt-cache для поиска пакетов
aptitude - полное правление пакетов с помощью псевдографики
/etc/apt/sources.list - перечень репозиториев

apt-get
Использование: apt-get [параметры] команда
               apt-get [параметры] install|remove пакет1 [пакет2…]
               apt-get [параметры] source пакет1 [пакет2…]

apt-get — интерфейс командной строки для получения пакетов и
информации о них из доверенных источников, а также установки,
обновления и удаления пакетов вместе с их зависимостями.

Основные команды:
  update - получить новые списки пакетов
  upgrade - выполнить обновление
  install - установить новые пакеты (указывается имя пакета libc6, а не имя файла libc6.deb)
  reinstall - переустановить пакеты (указывается имя пакета libc6, а не имя файла libc6.deb)
  remove - удалить пакеты
  purge - удалить пакеты вместе с их файлами настройки
  autoremove - автоматически удалить все неиспользуемые пакеты
  dist-upgrade - обновить всю систему, подробнее в apt-get(8)
  dselect-upgrade - руководствоваться выбором, сделанным в dselect
  build-dep - настроить сборочные зависимости для пакета с исходным кодом
  satisfy - удовлетворить строки зависимостей
  clean - удалить скачанные файлы архивов
  autoclean - удалить старые скачанные файлы архивов
  check - проверить отсутствие нарушенных зависимостей
  source - скачать архивы с исходным кодом
  download - скачать двоичный пакет в текущий каталог
  changelog - скачать и показать журнал изменений заданного пакета

apt-get autoremove удалить ненужные зависимости

apt-cache ищет и отображает имеющуюся информацию об установленных и доступных
для установки пакетах. Она работает исключительно с данными локального кэша,
созданного командой «update», например, программы apt-get. Вследствие этого
отображаемая информация может являться устаревшей, если обновление долго не
выполнялось, но зато apt-cache работает независимо от доступности настроенных
источников (например, без доступа к сети).

Основные команды:
  showsrc - показать информацию о пакете с исходным кодом
  search - найти пакеты, имя которых удовлетворяет регулярному выражению
  depends - показать необработанную информацию о зависимостях пакета
  rdepends - показать информацию об обратных зависимостях пакета
  show - показать информацию о пакете в удобочитаемой форме
  pkgnames - показать имена всех пакетов в системе
  policy - показать текущую политику выбора пакетов

apt-cache search package_name - поиск пакета
apt-cache show package_name  - просмотр информации о пакетах
apt-cache depends package_name - просмотр зависимостей пакета
apt-cache rdepends package_name - просмотр зависимостей от пакета

Виды ПО в репозиториях
main - официальное ПО от разаработчиков дистрибутивов
restricted - частично свободное ПО
universe - ПО поставляемое энтузиастами
multiverse (nonfree) - проприетарное ПО
trusty - ПО для текущего репозитория
trusty-backports - ПО для обеспечения обратной совместимости
security - Обновления безопасности


RedHat/CentOS
rpm
rpm -iv packet.rpm - установка пакета с выводом в консоль (ключ v)
rpm -e packet_name - даление пакета
rpm -K packet.rpm - проверить ключ пакета
rpm -Vv packet_name - Проверить на какие пакеты опирается пакет
rpm -q packt_name - посмотреть версию пакета
rpm -qi packt_name - посмотреть подробную информацию о пакете
rpm -d packt_name - вывести ссылки на документацию
yum
yum install packet-name - установить пакет
yum remove packet-name - удалить пакет
yum upgrade - обновить пакеты
yum search packet_name - найти пакет
Репозитории yum /etc/yum.respons.d/

ymdownloader packet_name - скачивание пакета без установки.

Владельцы файлов и папок
chown - установка владельца
chgrp - установка группы владельцев
chmod - установка прав доступа

ls - l - посмотреть права доступа и владельцеа для файлов и папок в текущей директории
chown :group_name file_name - поменять группу припомощи команды chown
chown -R user:group folder_name - рекурсивное изменение владельцев для папки и файлов в ней

Права доступа к файлам и папкам
eXecute = 1 Write = 2 Read = 4
Число | Разрешения            | Символ
 0    | Нет прав              | ---
 1    | Execute               | --x
 2    | Write                 | -w-
 3    | Write, execute        | -wx
 4    | Read                  | r--
 5    | Read, execute         | r-x
 6    | Read, write           | rw-
 7    | Read, write, execute  | rwx

владелец группа остальные
rwx      rwx    rwx

chmod 750 script все права владельцу, чтение и выполнение группе и никаких прав остальным 
chmod u+w script дать право записи владельцу
chmod ugo-x отобрать у всех право на выполнение
Право на выполнение папки является правом на заход в неё

